//
// Tamaños Relativos
//
$size-relative: (
  'none': 0,
  'quarter': $space / 4,
  'half': $space / 2,
  'simple': $space,
  'double': $space * 2,
  'triple': $space * 3,
  'quadruple': $space * 4,
  'quintuple': $space * 5,
  'sextuple': $space * 6,
) !default;

//
// Tamaños Proporcionales
//
$size-percentages: (
  '10': 10,
  '20': 20,
  '25': 25,
  '30': 30,
  '33': 33.3,
  '40': 40,
  '50': 50,
  '60': 60,
  '66': 66.6,
  '70': 70,
  '75': 75,
  '80': 80,
  '90': 90,
  '100': 100,
) !default;

//
// Modifica el tamaño de un elemento.
//

@if ($responsive) {
  @each $breakpoint in $breakpoints-list {
    @include media($breakpoint) {
      $breakpoint: get-breakpoint-sufix($breakpoint);

      //
      // Tamaños relativos
      //
      @each $size, $length in $size-relative {
        // Obtengo la cadena del tamaño para formar el nombre de la clase
        $size: get-space-sufix($size);

        .width#{$breakpoint}#{$size} {
          width: #{$length} !important;
        }

        .height#{$breakpoint}#{$size} {
          width: #{$length} !important;
        }
      }

      //
      // Tamaños proporcionales
      //
      @each $size, $length in $size-percentages {
        .width#{$breakpoint}-#{$size} {
          width: #{$length * 1%} !important;
        }

        .height#{$breakpoint}-#{$size} {
          height: #{$length * 1%} !important;
        }

        .vw#{$breakpoint}-#{$size} {
          width: #{$length}vw !important;
        }

        .vh#{$breakpoint}-#{$size} {
          height: #{$length}vh !important;
        }

        .max-height#{$breakpoint}-#{$size} {
          max-height: #{$length * 1%} !important;
        }

        .max-width#{$breakpoint}-#{$size} {
          max-width: #{$length * 1%} !important;
        }

        .max-vw#{$breakpoint}-#{$size} {
          max-width: #{$length}vw !important;
        }

        .max-vh#{$breakpoint}-#{$size} {
          max-height: #{$length}vh !important;
        }
      }

      .width#{$breakpoint}-auto {
        width: auto !important;
      }

      .height#{$breakpoint}-auto {
        height: auto !important;
      }
    }
  }
}
